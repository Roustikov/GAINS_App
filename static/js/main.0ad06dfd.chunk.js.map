{"version":3,"sources":["TaskForm.js","Task.js","TaskList.js","App.js","index.js"],"names":["TaskForm","props","addTask","event","addTaskCallback","state","setState","id","name","description","assignee","progress","start","end","preventDefault","handleInputChange","bind","target","value","type","checked","this","onSubmit","className","onChange","require","Component","Task","task","TaskList","tasks","map","App","taskData","push","onMindMapChange","model","callback","viewMode","dependencies","board","columns","generateSimpleModel","ref","diagram","card","source","destination","changedState","index","findIndex","element","toColumnId","console","log","title","cards","filter","item","rootKey","Model","create","rootTopicKey","topics","key","blocks","data","initialBoard","getBoard","onCardDragEnd","taskDragEnd","plugins","diagramRef","getTasks","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0ad06dfd.chunk.js","sourcesContent":["var React = require('react');\r\n\r\nclass TaskForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        id: \"Task6\",\r\n        name: \"Task6\",\r\n        description: \"Test\",\r\n        assignee: \"User\",\r\n        progress: \"80\",\r\n        start: \"2020-11-23\",\r\n        end: \"2021-11-23\",\r\n        state: \"ToDo\"\r\n    };\r\n\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n  }\r\n\r\n  handleInputChange(event) {\r\n    const target = event.target;\r\n    const value = target.type === 'checkbox' ? target.checked : target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  addTask = (event) => {\r\n    this.props.addTaskCallback(this.state);\r\n    // generate new id\r\n    this.setState({\r\n        id: \"\",\r\n        name: \"\",\r\n        description: \"\",\r\n        assignee: \"\",\r\n        progress: \"\",\r\n        start: \"\",\r\n        end: \"\",\r\n        state: \"ToDo\"\r\n    })\r\n    \r\n    event.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit = {this.addTask} className=\"container\">\r\n        <div>\r\n      <label>Create new task</label>\r\n\r\n        <div className=\"input-group\">\r\n        <label>Title:</label>\r\n        <input\r\n          name=\"name\"\r\n          type=\"input\"\r\n          value={this.state.name}\r\n          onChange={this.handleInputChange} />\r\n          </div>\r\n\r\n        <div className=\"input-group\">\r\n        <label>Description:</label>\r\n          <input\r\n            name=\"description\"\r\n            type=\"text\"\r\n            value={this.state.description}\r\n            onChange={this.handleInputChange} />\r\n        </div>\r\n\r\n        <div className=\"input-group\">\r\n        <label>Assignee:</label>\r\n          <input\r\n            name=\"assignee\"\r\n            type=\"text\"\r\n            value={this.state.assignee}\r\n            onChange={this.handleInputChange} />\r\n        </div>\r\n\r\n        <div className=\"input-group\">\r\n        <label>Progress:</label>\r\n          <input\r\n            name=\"progress\"\r\n            type=\"text\"\r\n            value={this.state.progress}\r\n            onChange={this.handleInputChange} />\r\n        </div>\r\n        \r\n        <div className=\"input-group\">\r\n        <label>Start date:</label>\r\n          <input\r\n            name=\"start\"\r\n            type=\"text\"\r\n            value={this.state.start}\r\n            onChange={this.handleInputChange} />\r\n        </div>\r\n        \r\n        <div className=\"input-group\">\r\n        <label>End date:</label>\r\n          <input\r\n            name=\"end\"\r\n            type=\"text\"\r\n            value={this.state.end}\r\n            onChange={this.handleInputChange} />\r\n        </div>\r\n        <input className=\"add-task-button\" type=\"submit\" value = \"Add task\"/>\r\n        </div>\r\n      </form>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default TaskForm;","var React = require('react');\r\n\r\nclass Task extends React.Component {\r\n\r\n    render() {\r\n        return(\r\n        <div>Id:{this.props.task.id} Name:{this.props.task.name} State: {this.props.task.state} Start:{this.props.task.start} End:{this.props.task.end}</div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Task;","import Task from \"./Task.js\";\r\nvar React = require('react');\r\n\r\nclass TaskList extends React.Component {\r\n\r\n    render() {\r\n        let tasks = this.props.tasks.map(task => {return <Task task={task} key={task.id}/>});\r\n        \r\n        return(\r\n        <div className=\"container wide\">\r\n            <label>Task List</label>\r\n            {tasks}</div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TaskList;","import './App.css';\nimport TaskForm from './TaskForm.js'\nimport TaskList from './TaskList.js'\nimport ReactGantt from 'gantt-for-react';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\n\nimport Board from '@lourenci/react-kanban'\nimport '@lourenci/react-kanban/dist/styles.css'\n\nimport { Diagram, iconClassName, Icon } from '@blink-mind/renderer-react';\nimport { Model } from \"@blink-mind/core\";\n\nvar React = require('react');\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            viewMode: \"Month\",\n            tasks: [\n                { id:\"Task1\", name:\"Test1\", state: \"Done\", start:\"2020-11-20\", end:\"2021-02-24\", progress:\"100\", dependencies:\"\" },\n                { id:\"Task2\", name:\"Test2\", state: \"ToDo\", start:\"2020-11-21\", end:\"2021-04-24\", progress:\"10\", dependencies:\"\" },\n                { id:\"Task3\", name:\"Test3\", state: \"ToDo\", start:\"2020-11-23\", end:\"2021-04-26\", progress:\"30\", dependencies:\"Task1,Task2\" },\n                { id:\"Task4\", name:\"Test4\", state: \"ToDo\", start:\"2020-11-23\", end:\"2021-06-26\", progress:\"10\", dependencies:\"Task3\" },\n            ],\n            board: {\n                columns: {}\n            },\n            model: {\n            }\n        };\n        this.state.model = this.generateSimpleModel();\n    }\n\n    diagramRef(ref){\n        this.state.diagram = ref;\n    };\n    \n    taskDragEnd(board, card, source, destination) {\n        let changedState = [...this.state.tasks];\n        let index = this.state.tasks.findIndex(element => element.id == card.id );\n        changedState[index] = {...changedState[index], state: destination.toColumnId == 1 ? \"ToDo\" : \"Done\"};\n        this.setState({tasks: changedState}, ()=>{console.log(this.state)});\n    }\n\n    addTask = (taskData) => {\n        this.state.tasks.push(taskData);\n        this.setState(this.state);\n    }\n    \n    getBoard(){\n        let columns = [\n            {\n              id: 1,\n              title: 'ToDo:',\n              cards: []\n            },\n            {\n              id: 2,\n              title: 'Done:',\n              cards: []\n            }\n          ];\n        columns[0].cards = this.state.tasks.filter(item => {item.title=item.name; return item.state===\"ToDo\";});\n        columns[1].cards = this.state.tasks.filter(item => {item.title=item.name; return item.state===\"Done\";});\n        return {columns: columns};\n    }\n\n    getTasks(){\n        return this.state.tasks;\n    }\n\n    generateSimpleModel() {\n        const rootKey = \"TestRootKey!\";//createKey();\n      \n        return Model.create({\n          rootTopicKey: rootKey,\n          topics: [\n            {\n              key: rootKey,\n              blocks: [{ type: \"CONTENT\", data: \"Tasks\" }]\n            }\n          ]\n        });\n    }\n\n    onMindMapChange = (model, callback) => {\n        this.setState({model: model}, callback);\n    };\n\n    render() {\n        return (\n            <div className=\"App\">\n            <Tabs>\n            <TabList>\n            <Tab>Edit Tasks</Tab>\n            <Tab>Kanban Board</Tab>\n            <Tab>Mind Map</Tab>\n            <Tab>Gantt Diagram</Tab>\n            </TabList>\n            \n            <TabPanel>\n            <div className=\"wrapper\">\n                <TaskForm addTaskCallback={this.addTask}></TaskForm>\n                <TaskList tasks={this.state.tasks}></TaskList>\n            </div>\n            </TabPanel>\n\n            <TabPanel>\n                <div>\n                <Board initialBoard={this.getBoard()} onCardDragEnd={this.taskDragEnd.bind(this)}/>\n                </div>\n            </TabPanel>\n\n            <TabPanel>\n                <div className=\"mindmap\">\n                <Diagram\n                    model={this.state.model}\n                    onChange={this.onMindMapChange}\n                    plugins={[]}\n                    ref={this.diagramRef.bind(this)}\n                />\n                </div>\n            </TabPanel>\n\n            <TabPanel>\n                <div>\n                    <ReactGantt tasks={this.getTasks()} viewMode={this.state.viewMode}></ReactGantt>\n                </div>\n            </TabPanel>\n\n            </Tabs>\n            \n            </div>);\n        }\n    }\n    \n    export default App;\n    ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}