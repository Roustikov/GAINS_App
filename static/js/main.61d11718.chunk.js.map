{"version":3,"sources":["MindMap/MindMap.tsx","Gantt/GanttDiagram.tsx","Kanban/KanbanBoard.tsx","DataProvider.tsx","TaskForm.js","Popup/EditPopup.tsx","App.js","index.js"],"names":["MindMapContainer","props","id","width","height","layout","type","dataSourceSettings","parentId","dataSource","DataManager","this","mindMap","root","getNodeDefaults","obj","shape","content","data","TaskName","style","fill","strokeColor","strokeWidth","borderColor","backgroundColor","constraints","NodeConstraints","Default","Rotate","Resize","borderWidth","margin","left","right","top","bottom","getConnectorDefaults","connector","diagram","targetDecorator","services","DataBinding","MindMap","React","GanttDiagram","taskFields","editSettings","labelSettings","resourceFields","state","tasks","users","name","startDate","duration","progress","child","dependency","resourceInfo","rightLabel","allowTaskbarEditing","allowEditing","mode","resources","allowSelection","rowHeight","taskbarHeight","Edit","Selection","KanbanBoard","fields","className","cssClass","keyField","cardSettings","showHeader","headerField","contentField","dialogSettings","headerText","DataProvider","State","StartDate","Date","EndDate","subtasks","Duration","Progress","Predecessor","fullName","getTasks","getUsers","task","ParentId","parent","getTaskWithId","Array","isArray","push","mapData","concat","getFlatTasks","flatTasks","map","_parseTask","result","find","x","t","Component","TaskForm","addTask","event","newTask","start","end","parseInt","addTaskCallback","setState","getNewForm","preventDefault","close","dataProvider","getSimpleTaskList","handleInputChange","bind","target","value","checked","taskIds","getTaskIdList","Math","max","description","assignee","onSubmit","onChange","user","dependencies","require","EditPopup","trigger","modal","nested","onClick","App","taskData","getMindMap","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.61d11718.chunk.js","sourcesContent":["import * as React from \"react\";\r\nimport {\r\n    Diagram,\r\n    DiagramComponent,\r\n    Inject,\r\n    ConnectorModel,\r\n    Node,\r\n    DataBinding,\r\n    LayoutType,\r\n    Rect,\r\n    HorizontalAlignment,\r\n    VerticalAlignment,\r\n    NodeModel,\r\n    TextModel,\r\n    MindMap,\r\n    NodeConstraints,\r\n    ConnectorShape,\r\n    Decorator\r\n} from \"@syncfusion/ej2-react-diagrams\";\r\n\r\nimport {\r\n    DataManager\r\n} from '@syncfusion/ej2-data';\r\n\r\n//Initializes data source\r\nclass MindMapContainer extends React.Component {\r\n    props: any;\r\n  render() {\r\n      return(\r\n        <DiagramComponent id = \"diagram\"\r\n        width = {\r\n            '100%'\r\n        }\r\n        height = {\r\n            '550px'\r\n        }\r\n        //Uses layout to auto-arrange nodes on the diagram page\r\n        layout = {\r\n            {\r\n                //Sets layout type\r\n                type: 'MindMap'\r\n            }\r\n        }\r\n        //Configures data source for diagram\r\n        dataSourceSettings = {\r\n            {\r\n                id: 'id',\r\n                parentId: 'ParentId',\r\n                dataSource: new DataManager(this.props.mindMap),\r\n                root: \"0\"\r\n            }\r\n        }\r\n        //Sets the default properties for nodes and connectors\r\n        getNodeDefaults = {\r\n            (obj: Node) => {\r\n                obj.shape = {\r\n                    type: 'Text',\r\n                    content: (obj.data as {\r\n                        TaskName: 'string'\r\n                    }).TaskName,\r\n                };\r\n                obj.style = {\r\n                    fill: '#6BA5D7',\r\n                    strokeColor: 'none',\r\n                    strokeWidth: 2\r\n                };\r\n                obj.borderColor = 'white';\r\n                obj.backgroundColor = '#6BA5D7';\r\n                obj.constraints = NodeConstraints.Default & ~NodeConstraints.Rotate & ~NodeConstraints.Resize;\r\n                obj.borderWidth = 1;\r\n                (obj.shape as TextModel).margin = {\r\n                    left: 20,\r\n                    right: 20,\r\n                    top: 20,\r\n                    bottom: 20\r\n                };\r\n                return obj;\r\n            }\r\n        }\r\n        getConnectorDefaults = {\r\n            (connector: ConnectorModel, diagram: Diagram) => {\r\n                connector.style = {\r\n                    strokeColor: '#6BA5D7',\r\n                    strokeWidth: 2\r\n                };\r\n                connector.targetDecorator!.shape = \"None\"\r\n                connector.targetDecorator!.style!.strokeColor = '#6BA5D7';\r\n                connector.type = 'Bezier';\r\n                \r\n                return connector;\r\n            }\r\n        }\r\n        ><Inject services = {[DataBinding, MindMap]}/>\r\n        </DiagramComponent>\r\n      )\r\n  }\r\n}\r\n\r\nexport default MindMapContainer;\r\n","import { DataBinding } from \"@syncfusion/ej2-react-diagrams\";\r\n\r\nimport { \r\n    Inject, \r\n    Selection, \r\n    Edit,\r\n    EditSettingsModel,\r\n    GanttComponent,\r\n    TaskFieldsModel\r\n} from '@syncfusion/ej2-react-gantt';\r\n\r\nimport * as React from 'react';\r\nimport './gantt.css';\r\n\r\nclass GanttDiagram extends React.Component {\r\n    taskFields: TaskFieldsModel;\r\n    editSettings: EditSettingsModel;\r\n    labelSettings: { rightLabel: string; };\r\n    resourceFields: { id: string; name: string; };\r\n    props: any;\r\n    state: any;\r\n    constructor(props: {tasks: any; users: any;}) {\r\n        super(props);\r\n        this.state = {\r\n            tasks: props.tasks,\r\n            users: props.users\r\n        };\r\n\r\n        this.taskFields = {\r\n            id: 'id',\r\n            name: 'TaskName',\r\n            startDate: 'StartDate',\r\n            duration: 'Duration',\r\n            progress: 'Progress',\r\n            child: 'subtasks',\r\n            dependency: 'Predecessor',\r\n            resourceInfo: 'resources'\r\n        };\r\n        this.labelSettings = {\r\n            rightLabel: 'assignee'\r\n        };\r\n        this.resourceFields = {\r\n            id: 'userId',\r\n            name: 'fullName',\r\n        };\r\n        this.editSettings = {\r\n            allowTaskbarEditing: true,\r\n            allowEditing: true,\r\n            mode: 'Auto',\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (<GanttComponent\r\n            dataSource={this.state.tasks}\r\n            taskFields={this.taskFields} \r\n            editSettings={this.editSettings}\r\n            resourceFields={this.resourceFields}\r\n            resources={this.state.users}\r\n            allowSelection={true}\r\n            rowHeight={40}\r\n            taskbarHeight={20}>\r\n            <Inject services={[Edit, Selection]}/>\r\n            </GanttComponent>);\r\n    }\r\n}\r\n\r\nexport default GanttDiagram;","import * as React from 'react';\r\nimport { KanbanComponent, ColumnsDirective, ColumnDirective } from \"@syncfusion/ej2-react-kanban\";\r\nimport './kanban.css';\r\nimport { extend, addClass } from '@syncfusion/ej2-base';\r\nimport * as dataSource from './datasource.json';\r\n\r\n\r\nexport default class KanbanBoard extends React.Component {\r\n    props:any;\r\n    fields:any;\r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        return (<div className='schedule-control-section'>\r\n        <div className='col-lg-12 control-section'>\r\n          <div className='control-wrapper'>\r\n            <KanbanComponent id=\"kanban\" \r\n            cssClass=\"kanban-overview\" \r\n            keyField=\"State\" \r\n            dataSource={this.props.tasks}\r\n            cardSettings={{ showHeader:false, headerField: \"id\", contentField: \"TaskName\"}} \r\n            dialogSettings={{ fields: this.fields }}>\r\n              <ColumnsDirective>\r\n                <ColumnDirective headerText=\"To Do\" keyField=\"ToDo\"/>\r\n                <ColumnDirective headerText=\"In Progress\" keyField=\"InProgress\"/>\r\n                <ColumnDirective headerText=\"In Review\" keyField=\"Review\"/>\r\n                <ColumnDirective headerText=\"Done\" keyField=\"Done\"/>\r\n              </ColumnsDirective>\r\n            </KanbanComponent>\r\n          </div>\r\n        </div>\r\n      </div>);\r\n    }\r\n}","import { Component } from 'react'\r\n\r\nexport default class DataProvider extends Component {\r\n    users: { id: number; fullName: string; }[];\r\n    tasks: { id: number; State: \"ToDo\", TaskName: string; StartDate: Date; EndDate: Date; subtasks: ({ id: number; State: \"ToDo\", TaskName: string; StartDate: Date; Duration: number; Progress: number; EndDate?: undefined; subtasks?: undefined; } | { })[]; }[];\r\n    \r\n    constructor(props: {}) {\r\n        super(props);\r\n        this.tasks = [{\r\n            id: 1,\r\n            State: \"ToDo\", \r\n            TaskName: 'Project Initiation',\r\n            StartDate: new Date('04/02/2019'),\r\n            EndDate: new Date('04/21/2019'),\r\n            subtasks: [\r\n                { id: 2, State: \"Done\", TaskName: 'Identify Site location', StartDate: new Date('04/02/2019'), Duration: 4, Progress: 50 },\r\n                { id: 3, State: \"Done\", TaskName: 'Perform Soil test', StartDate: new Date('04/02/2019'), Duration: 4, Progress: 50 },\r\n                { id: 4, State: \"ToDo\", TaskName: 'Soil test approval', StartDate: new Date('04/02/2019'), Duration: 4, Progress: 50 },\r\n            ]\r\n        },\r\n        {\r\n            id: 5,\r\n            State: \"ToDo\", \r\n            TaskName: 'Project Estimation',\r\n            StartDate: new Date('04/02/2019'),\r\n            EndDate: new Date('04/21/2019'),\r\n            subtasks: [\r\n                { id: 6, State: \"ToDo\", TaskName: 'Develop floor plan for estimation1', StartDate: new Date('04/04/2019'), Duration: 3, Progress: 50 },\r\n                { id: 7, State: \"ToDo\", TaskName: 'List materials1', StartDate: new Date('04/04/2019'), Duration: 3, Progress: 50 },\r\n                { id: 8, State: \"ToDo\", TaskName: 'Estimation approval1', StartDate: new Date('04/06/2019'), EndDate: new Date('04/07/2019'), subtasks: [\r\n                    { id: 9, State: \"ToDo\", TaskName: 'Develop floor plan for estimation2', StartDate: new Date('04/06/2019'), Duration: 3, Progress: 50, Predecessor: '8FS' },\r\n                    { id: 10, State: \"ToDo\", TaskName: 'List materials2', StartDate: new Date('04/06/2019'), Duration: 3, Progress: 50, Predecessor: '9FS' },\r\n                    { id: 11, State: \"ToDo\", TaskName: 'Estimation approval2', StartDate: new Date('04/06/2019'), Duration: 3, Predecessor: '10FS', subtasks: [\r\n                        { id: 12, State: \"ToDo\", TaskName: 'Develop floor plan for estimation3', StartDate: new Date('04/06/2019'), Duration: 3, Progress: 50, Predecessor: '11FS' },\r\n                        { id: 13, State: \"ToDo\", TaskName: 'List materials3', StartDate: new Date('04/06/2019'), Duration: 3, Progress: 50, Predecessor: '12FS' },\r\n                        { id: 14, State: \"ToDo\", TaskName: 'Estimation approval3', StartDate: new Date('04/08/2019'), Duration: 30, Progress: 50, Predecessor: '13FS', subtasks: [\r\n                            { id: 15, State: \"ToDo\", TaskName: 'Develop floor plan for estimation4', StartDate: new Date('04/06/2019'), Duration: 3, Progress: 50, Predecessor: '11FS' },\r\n                            { id: 16, State: \"ToDo\", TaskName: 'List materials4', StartDate: new Date('04/06/2019'), Duration: 3, Progress: 50, Predecessor: '12FS' },\r\n                            { id: 17, State: \"ToDo\", TaskName: 'Estimation approval4', StartDate: new Date('04/08/2019'), Duration: 30, Progress: 50, Predecessor: '13FS' }\r\n                        ] }\r\n                    ] }\r\n                ]  }\r\n            ]\r\n        }];\r\n        \r\n        this.users = [\r\n            {id: 0, fullName:\"Unassigned\"},\r\n            {id: 1, fullName:\"Eddard Stark\"},\r\n            {id: 2, fullName:\"Robert Baratheon\"},\r\n            {id: 3, fullName:\"Jaime Lannister\"},\r\n            {id: 4, fullName:\"Catelyn Stark\"},\r\n            {id: 5, fullName:\"Cersei Lannister\"},\r\n            {id: 6, fullName:\"Daenerys Targaryen\"},\r\n            {id: 7, fullName:\"Jorah Mormont\"},\r\n            {id: 8, fullName:\"Viserys Targaryen\"},\r\n            {id: 9, fullName:\"Jon Snow\"},\r\n            {id: 10, fullName:\"Robb Stark\"},\r\n            {id: 11, fullName:\"Sansa Stark\"},\r\n            {id: 12, fullName:\"Arya Stark\"},\r\n            {id: 13, fullName:\"Theon Greyjoy\"},\r\n            {id: 14, fullName:\"Brandon Stark\"},\r\n            {id: 15, fullName:\"Joffrey Baratheon\"},\r\n            {id: 16, fullName:\"Sandor Clegane\"},\r\n            {id: 17, fullName:\"Tyrion Lannister\"}];    \r\n    }\r\n\r\n    readData() {\r\n        return ({tasks: this.getTasks(), users: this.getUsers()})\r\n    }\r\n\r\n    addTask(task: any){\r\n        if(task.ParentId !== 0) {\r\n            let parent = this.getTaskWithId(task.ParentId);\r\n            if(parent) {\r\n                if(Array.isArray(parent.subtasks)) {\r\n                    parent.subtasks.push(task);\r\n                } else {\r\n                    parent.subtasks = [task];\r\n                }\r\n            }\r\n        } else {\r\n            this.tasks.push(task);\r\n        }\r\n    }\r\n\r\n    getMindMap(){\r\n        let mapData = [{\r\n            id: 0,\r\n            State: \"ToDo\", TaskName: 'Project'\r\n        }];\r\n\r\n        mapData = mapData.concat(this.getFlatTasks());\r\n        \r\n        return mapData;\r\n    }\r\n\r\n    getUsers(){\r\n        return this.users;\r\n    }\r\n\r\n    getTasks(){\r\n        return this.tasks;\r\n    }\r\n\r\n    getFlatTasks() {\r\n        let flatTasks: any = [];\r\n        this.tasks.map((task)=>{\r\n            return flatTasks = flatTasks.concat(this._parseTask(task, 0));\r\n        })\r\n\r\n        return flatTasks;\r\n    }\r\n\r\n    _parseTask(task:any, ParentId: number) {\r\n        let result: any = [task];\r\n        task.ParentId = ParentId;\r\n        if(Array.isArray(task.subtasks)) {\r\n            task.subtasks.map((child:any)=>{\r\n                return result = result.concat(this._parseTask(child, task.id))\r\n            })\r\n        }\r\n        return result;\r\n    }\r\n\r\n    getTaskWithId(id: number){\r\n        return this.getFlatTasks().find((x:any)=>{return x.id === id});\r\n    }\r\n\r\n    getTaskIdList(){\r\n        return this.getFlatTasks().map((t:any)=>{return t.id});\r\n    }\r\n\r\n    getSimpleTaskList(){\r\n        let tasks = this.getFlatTasks();\r\n        let result = tasks.map((t:any)=>{return {id:t.id, name:t.TaskName}});\r\n        return [{id: 0, name: \"Project\"}, ...result];\r\n    }\r\n}\r\n","var React = require('react');\r\n\r\nclass TaskForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = this.getNewForm();\r\n    this.state.tasks = props.dataProvider.getSimpleTaskList();\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n  }\r\n\r\n  handleInputChange(event) {\r\n    const target = event.target;\r\n    const value = target.type === 'checkbox' ? target.checked : target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  getNewForm(){\r\n    let taskIds = this.props.dataProvider.getTaskIdList();\r\n    let nextId = Math.max(...taskIds)+1;\r\n    return (\r\n    {\r\n      id: nextId,\r\n      name: \"New Task\",\r\n      start: new Date(),\r\n      end: new Date(),\r\n      description: \"New Description\",\r\n      assignee: 0,\r\n      progress: 0,\r\n      dependency: 0,\r\n      state: \"ToDo\"\r\n    })\r\n  }\r\n\r\n  addTask = (event) => {\r\n\r\n    let newTask = {\r\n      TaskName: this.state.name,\r\n      id: this.state.id,\r\n      StartDate: new Date(this.state.start), \r\n      EndDate: new Date(this.state.end),\r\n      Duration: this.state.duration,\r\n      Progress: this.state.progress,\r\n      ParentId: parseInt(this.state.dependency),\r\n      State: this.state.state\r\n    };\r\n    \r\n    this.props.addTaskCallback(newTask);\r\n    // generate new id \r\n    this.setState(this.getNewForm()); \r\n    event.preventDefault();\r\n    this.props.close();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"wrapper\">\r\n      <form onSubmit = {this.addTask} className=\"container\">\r\n        <div className=\"input-group\">\r\n        <label>Title:</label>\r\n        <input\r\n          className=\"input-value\"\r\n          name=\"name\"\r\n          type=\"input\"\r\n          value={this.state.name}\r\n          onChange={this.handleInputChange} />\r\n          </div>\r\n\r\n        <div className=\"input-group\">\r\n        <label>Description:</label>\r\n          <input\r\n            className=\"input-value\"\r\n            name=\"description\"\r\n            type=\"text\"\r\n            value={this.state.description}\r\n            onChange={this.handleInputChange} />\r\n        </div>\r\n\r\n        <div className=\"input-group\">\r\n        <label>Assignee:</label>\r\n          <select name=\"assignee\"\r\n            className=\"input-value\"\r\n            type=\"text\"\r\n            value={this.state.assignee}\r\n            onChange={this.handleInputChange}>\r\n            {this.props.dataProvider.getUsers().map(user=>{return <option value={user.id} key={user.id}>{user.fullName}</option>})}\r\n          </select>\r\n        </div>\r\n\r\n        <div className=\"input-group\">\r\n        <label>Progress:</label>\r\n          <input\r\n            className=\"input-value\"\r\n            name=\"progress\"\r\n            type=\"text\"\r\n            value={this.state.progress}\r\n            onChange={this.handleInputChange} />\r\n        </div>\r\n        \r\n        <div className=\"input-group\">\r\n        <label>Start date:</label>\r\n          <input\r\n            className=\"input-value\"\r\n            name=\"start\"\r\n            type=\"text\"\r\n            value={this.state.start}\r\n            onChange={this.handleInputChange} />\r\n        </div>\r\n        \r\n        <div className=\"input-group\">\r\n        <label>End date:</label>\r\n          <input\r\n            className=\"input-value\"\r\n            name=\"end\"\r\n            type=\"text\"\r\n            value={this.state.end}\r\n            onChange={this.handleInputChange} />\r\n        </div>\r\n\r\n        <div className=\"input-group\">\r\n        <label>Dependency:</label>\r\n          <select name=\"dependency\"\r\n            className=\"input-value\"\r\n            type=\"text\"\r\n            value={this.state.dependencies}\r\n            onChange={this.handleInputChange}>\r\n            {this.props.dataProvider.getSimpleTaskList().map(task=>{return <option value={task.id} key={task.id}>{task.name}</option>})}\r\n          </select>\r\n        </div>\r\n\r\n        <input className=\"add-task-button\" type=\"submit\" value = \"Add task\"/>\r\n      </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TaskForm;","import Popup from 'reactjs-popup';\r\nimport './modal.css';\r\n\r\nimport React, { Component } from 'react'\r\nimport TaskForm from '../TaskForm.js'\r\n\r\nexport default class EditPopup extends Component {\r\n    state: any;\r\n    props: any;\r\n    render() {\r\n        return (\r\n            <Popup\r\n            trigger={<button className=\"button add-task\"> Add Task </button>}\r\n            modal={true}\r\n            nested={true}>\r\n            {(close:any) => (\r\n              <div className=\"modal\">\r\n                <button className=\"close\" onClick={close}>\r\n                  &times;\r\n                </button>\r\n                <div className=\"header\"> Add Task </div>\r\n                <div className=\"content\">\r\n                <TaskForm \r\n                addTaskCallback={this.props.addTaskCallback} \r\n                dataProvider={this.props.dataProvider}\r\n                close={close}>\r\n                </TaskForm>\r\n                </div>\r\n              </div>\r\n            )}\r\n            </Popup>\r\n        )\r\n    }\r\n}","import './App.css';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\n\nimport MindMapContainer from './MindMap/MindMap'\nimport GanttDiagram from './Gantt/GanttDiagram';\nimport KanbanBoard from './Kanban/KanbanBoard';\nimport DataProvider from './DataProvider.tsx'\nimport EditPopup from './Popup/EditPopup.tsx'\n\nvar React = require('react');\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.dataProvider = new DataProvider();\n        this.state = {\n            tasks: this.dataProvider.getTasks(),\n            users: this.dataProvider.getUsers(),\n            mindMap: this.dataProvider.getMindMap()\n        };\n    }\n\n    addTask = (taskData) => {\n        this.dataProvider.addTask(taskData);\n        this.setState({tasks: this.dataProvider.getTasks(), mindMap: this.dataProvider.getMindMap()});\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n            <Tabs>\n            <TabList>\n            <EditPopup addTaskCallback={this.addTask}\n                dataProvider={this.dataProvider}></EditPopup>\n            <Tab>Mind Map</Tab>\n            <Tab>Gantt Diagram</Tab>\n            <Tab>Kanban Board</Tab>\n            </TabList>\n\n            <TabPanel>\n                <MindMapContainer mindMap={this.state.mindMap}/>\n            </TabPanel>\n\n            <TabPanel>\n                <div className=\"gantt-container\">\n                    <GanttDiagram tasks={this.state.tasks} users={this.state.users}></GanttDiagram>\n                </div>\n            </TabPanel>\n\n            <TabPanel>\n                <div className=\"gantt-container\">\n                    <KanbanBoard tasks={this.state.mindMap}></KanbanBoard>\n                </div>\n            </TabPanel>\n\n            </Tabs>\n            \n            </div>);\n        }\n    }\n    \n    export default App;\n    ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n   <React.StrictMode>\n    <App />\n   </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}