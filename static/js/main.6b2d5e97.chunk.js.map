{"version":3,"sources":["MindMap/MindMap.tsx","MindMap/TableView.jsx","Gantt/GanttDiagram.tsx","Kanban/KanbanBoard.tsx","TaskForm.js","Popup/EditPopup.tsx","DataProvider.tsx","App.js","index.js"],"names":["MindMapContainer","props","state","id","width","height","scrollSettings","scrollLimit","layout","type","dataSourceSettings","parentId","dataSource","DataManager","this","tasks","root","getNodeDefaults","obj","shape","content","data","TaskName","style","fill","strokeColor","strokeWidth","borderColor","backgroundColor","constraints","NodeConstraints","Default","Rotate","Resize","borderWidth","margin","left","right","top","bottom","getConnectorDefaults","connector","diagram","targetDecorator","textEdit","event","actionComplete","services","DataBinding","MindMap","React","TableView","editSettings","allowEditing","mode","treeColumnIndex","parentIdMapping","idMapping","overflowX","field","headerText","textAlign","max-width","format","editType","validationRules","date","number","Edit","Component","GanttDiagram","taskFields","labelSettings","resourceFields","ganttInstance","name","startDate","endDate","duration","progress","parentID","dependency","resourceInfo","rightLabel","allowTaskbarEditing","refresh","ref","gantt","resources","users","allowSelection","rowHeight","taskbarHeight","Selection","KanbanBoard","fields","className","cssClass","keyField","cardSettings","showHeader","headerField","contentField","TaskForm","addTask","newTask","StartDate","Date","start","EndDate","end","Duration","Progress","ParentId","parseInt","State","addTaskCallback","setState","getNewForm","preventDefault","close","dataProvider","getSimpleTaskList","handleInputChange","bind","target","value","checked","taskIds","getTaskIdList","Math","max","description","assignee","onSubmit","onChange","getUsers","map","user","fullName","dependencies","task","require","EditPopup","trigger","modal","nested","onClick","DataProvider","refreshCallback","mindMap","undefined","Assignee","Predecessor","t","differenceMs","abs","getTime","round","userId","push","find","x","App","taskData","getTasks","getMindMap","mindMapActionComplete","element","newValue","tableActionComplete","dataProviderTasks","separatorSize","size","min","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6b2d5e97.chunk.js","sourcesContent":["import * as React from \"react\";\r\nimport {\r\n    Diagram,\r\n    DiagramComponent,\r\n    Inject,\r\n    ConnectorModel,\r\n    Node,\r\n    DataBinding,\r\n    LayoutType,\r\n    Rect,\r\n    HorizontalAlignment,\r\n    VerticalAlignment,\r\n    NodeModel,\r\n    TextModel,\r\n    MindMap,\r\n    NodeConstraints,\r\n    ConnectorShape,\r\n    Decorator,\r\n    ITextEditEventArgs,\r\n    ScrollSettingsModel\r\n} from \"@syncfusion/ej2-react-diagrams\";\r\n\r\nimport {\r\n    DataManager\r\n} from '@syncfusion/ej2-data';\r\n\r\n//Initializes data source\r\nclass MindMapContainer extends React.Component {\r\n    props: any;\r\n    state:any;\r\n    \r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n  render() {\r\n      return(\r\n        <DiagramComponent id = \"diagram\"\r\n        width = '100%'\r\n        height = '100%'\r\n        scrollSettings = {{scrollLimit:\"Infinity\"}}\r\n        //Uses layout to auto-arrange nodes on the diagram page\r\n        layout = {\r\n            {\r\n                //Sets layout type\r\n                type: 'MindMap'\r\n            }\r\n        }\r\n        //Configures data source for diagram\r\n        dataSourceSettings = {\r\n            {\r\n                id: 'id',\r\n                parentId: 'ParentId',\r\n                dataSource: new DataManager(this.props.tasks),\r\n                root: \"0\"\r\n            }\r\n        }\r\n        //Sets the default properties for nodes and connectors\r\n        getNodeDefaults = {\r\n            (obj: Node) => {\r\n                obj.shape = {\r\n                    type: 'Text',\r\n                    content: (obj.data as {\r\n                        TaskName: 'string'\r\n                    }).TaskName,\r\n                };\r\n                obj.style = {\r\n                    fill: '#6BA5D7',\r\n                    strokeColor: 'none',\r\n                    strokeWidth: 2\r\n                };\r\n                obj.borderColor = 'white';\r\n                obj.backgroundColor = '#6BA5D7';\r\n                obj.constraints = NodeConstraints.Default & ~NodeConstraints.Rotate & ~NodeConstraints.Resize;\r\n                obj.borderWidth = 1;\r\n                (obj.shape as TextModel).margin = {\r\n                    left: 20,\r\n                    right: 20,\r\n                    top: 20,\r\n                    bottom: 20\r\n                };\r\n                return obj;\r\n            }\r\n        }\r\n        getConnectorDefaults = {\r\n            (connector: ConnectorModel, diagram: Diagram) => {\r\n                connector.style = {\r\n                    strokeColor: '#6BA5D7',\r\n                    strokeWidth: 2\r\n                };\r\n                connector.targetDecorator!.shape = \"None\"\r\n                connector.targetDecorator!.style!.strokeColor = '#6BA5D7';\r\n                connector.type = 'Bezier';\r\n                \r\n                return connector;\r\n            }\r\n        }\r\n        textEdit={(event: any) => {\r\n            this.props.actionComplete(event);\r\n        }}\r\n        ><Inject services = {[DataBinding, MindMap]}/>\r\n        </DiagramComponent>\r\n      )\r\n  }\r\n}\r\n\r\nexport default MindMapContainer;\r\n","import { TreeGridComponent, ColumnsDirective, ColumnDirective, Edit, Inject } from '@syncfusion/ej2-react-treegrid'\r\n\r\nimport { Component } from 'react'\r\n\r\nexport default class TableView extends Component {\r\n    constructor(props){\r\n      super(props);\r\n      this.editSettings = { \r\n        allowEditing: true, \r\n        mode: 'Cell' };\r\n    }\r\n    render(){\r\n      return (\r\n            <TreeGridComponent \r\n            dataSource={this.props.tasks}\r\n            editSettings={this.editSettings}\r\n            actionComplete={this.props.actionComplete}\r\n            treeColumnIndex={1} \r\n            parentIdMapping='ParentId'\r\n            idMapping='id'\r\n            height='100%'\r\n            width='100%'\r\n            style={{overflowX: \"scroll\"}}>\r\n              <ColumnsDirective>\r\n                <ColumnDirective field='id' headerText='ID' textAlign='Right' width='30px'></ColumnDirective>\r\n                <ColumnDirective field='TaskName' headerText='Task Name' width='200px'></ColumnDirective>\r\n                <ColumnDirective field='StartDate' headerText='Start Date' width='70px' max-width='70px' format='yMd' textAlign='Right' editType='datepickeredit' validationRules={{date:true}}/>\r\n                <ColumnDirective field='EndDate' headerText='End Date' width='70px' max-width='70px' format='yMd' textAlign='Right' editType='datepickeredit' validationRules={{date:true}}/>\r\n                <ColumnDirective field='Duration' headerText='Duration' width='70px' max-width='70px' textAlign='Right' validationRules={{number:true}}/>\r\n                <ColumnDirective field='Progress' headerText='Progress' width='50px' max-width='70px' textAlign='Right' validationRules={{number:true}}/>\r\n              </ColumnsDirective>\r\n              <Inject services={[Edit]}/>\r\n            </TreeGridComponent>\r\n      )\r\n    }\r\n}","import { \r\n    Inject, \r\n    Selection, \r\n    Edit,\r\n    EditSettingsModel,\r\n    GanttComponent,\r\n    TaskFieldsModel,\r\n    ResourceFields\r\n} from '@syncfusion/ej2-react-gantt';\r\n\r\nimport * as React from 'react';\r\nimport './gantt.css';\r\n\r\nclass GanttDiagram extends React.Component {\r\n    taskFields: TaskFieldsModel;\r\n    editSettings: EditSettingsModel;\r\n    labelSettings: { rightLabel: string; };\r\n    resourceFields: { id: string; name: string; };\r\n    props: any;\r\n    state: any;\r\n    ganttInstance: any;\r\n\r\n    constructor(props: {tasks: any; users: any;}) {\r\n        super(props);\r\n        this.taskFields = {\r\n            id: 'id',\r\n            name: 'TaskName',\r\n            startDate: 'StartDate',\r\n            endDate: 'EndDate',\r\n            duration: 'Duration',\r\n            progress: 'Progress',\r\n            parentID: 'ParentId',\r\n            dependency: 'Predecessor',\r\n            resourceInfo: 'Assignee'\r\n        };\r\n        this.labelSettings = {\r\n            rightLabel: 'Assignee'\r\n        };\r\n        this.resourceFields = {\r\n            id: 'userId',\r\n            name: 'fullName',\r\n        };\r\n        this.editSettings = {\r\n            allowTaskbarEditing: true,\r\n            allowEditing: true,\r\n            mode: 'Auto'\r\n        };\r\n    }\r\n    \r\ncomponentDidUpdate(props:any) {\r\n    let gantt:GanttComponent = this.ganttInstance;\r\n    gantt.refresh();\r\n}\r\n\r\n    render() {\r\n        return (<GanttComponent\r\n            ref={gantt => this.ganttInstance = gantt}\r\n            dataSource={this.props.tasks}\r\n            taskFields={this.taskFields} \r\n            editSettings={this.editSettings}\r\n            resourceFields={this.resourceFields}\r\n            resources={this.props.users}\r\n            allowSelection={true}\r\n            rowHeight={40}\r\n            taskbarHeight={20}>\r\n            <Inject services={[Edit, Selection]}/>\r\n            </GanttComponent>);\r\n    }\r\n}\r\n\r\nexport default GanttDiagram;","import * as React from 'react';\r\nimport { KanbanComponent, ColumnsDirective, ColumnDirective } from \"@syncfusion/ej2-react-kanban\";\r\nimport './kanban.css';\r\n\r\nexport default class KanbanBoard extends React.Component {\r\n    props:any;\r\n    fields:any;\r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (<div className='schedule-control-section'>\r\n        <div className='col-lg-12 control-section'>\r\n          <div className='control-wrapper'>\r\n            <KanbanComponent id=\"kanban\" \r\n            cssClass=\"kanban-overview\" \r\n            keyField=\"State\"\r\n            dataSource={this.props.tasks}\r\n            cardSettings={{ showHeader:false, headerField: \"id\", contentField: \"TaskName\"}} >\r\n              <ColumnsDirective>\r\n                <ColumnDirective headerText=\"To Do\" keyField=\"ToDo\"/>\r\n                <ColumnDirective headerText=\"In Progress\" keyField=\"InProgress\"/>\r\n                <ColumnDirective headerText=\"In Review\" keyField=\"Review\"/>\r\n                <ColumnDirective headerText=\"Done\" keyField=\"Done\"/>\r\n              </ColumnsDirective>\r\n            </KanbanComponent>\r\n          </div>\r\n        </div>\r\n      </div>);\r\n    }\r\n}","var React = require('react');\r\n\r\nclass TaskForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = this.getNewForm();\r\n    this.state.tasks = props.dataProvider.getSimpleTaskList();\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n  }\r\n\r\n  handleInputChange(event) {\r\n    const target = event.target;\r\n    const value = target.type === 'checkbox' ? target.checked : target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  getNewForm(){\r\n    let taskIds = this.props.dataProvider.getTaskIdList();\r\n    let nextId = Math.max(...taskIds)+1;\r\n    return (\r\n    {\r\n      id: nextId,\r\n      name: \"New Task\",\r\n      start: new Date(),\r\n      end: new Date(),\r\n      description: \"New Description\",\r\n      assignee: 0,\r\n      progress: 0,\r\n      dependency: 0,\r\n      state: \"ToDo\"\r\n    })\r\n  }\r\n\r\n  addTask = (event) => {\r\n\r\n    let newTask = {\r\n      TaskName: this.state.name,\r\n      id: this.state.id,\r\n      StartDate: new Date(this.state.start), \r\n      EndDate: new Date(this.state.end),\r\n      Duration: this.state.duration,\r\n      Progress: this.state.progress,\r\n      ParentId: parseInt(this.state.dependency),\r\n      State: this.state.state\r\n    };\r\n    \r\n    this.props.addTaskCallback(newTask);\r\n    // generate new id \r\n    this.setState(this.getNewForm()); \r\n    event.preventDefault();\r\n    this.props.close();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"wrapper\">\r\n      <form onSubmit = {this.addTask} className=\"container\">\r\n        <div className=\"input-group\">\r\n        <label>Title:</label>\r\n        <input\r\n          className=\"input-value\"\r\n          name=\"name\"\r\n          type=\"input\"\r\n          value={this.state.name}\r\n          onChange={this.handleInputChange} />\r\n          </div>\r\n\r\n        <div className=\"input-group\">\r\n        <label>Description:</label>\r\n          <input\r\n            className=\"input-value\"\r\n            name=\"description\"\r\n            type=\"text\"\r\n            value={this.state.description}\r\n            onChange={this.handleInputChange} />\r\n        </div>\r\n\r\n        <div className=\"input-group\">\r\n        <label>Assignee:</label>\r\n          <select name=\"assignee\"\r\n            className=\"input-value\"\r\n            type=\"text\"\r\n            value={this.state.assignee}\r\n            onChange={this.handleInputChange}>\r\n            {this.props.dataProvider.getUsers().map(user=>{return <option value={user.id} key={user.id}>{user.fullName}</option>})}\r\n          </select>\r\n        </div>\r\n\r\n        <div className=\"input-group\">\r\n        <label>Progress:</label>\r\n          <input\r\n            className=\"input-value\"\r\n            name=\"progress\"\r\n            type=\"text\"\r\n            value={this.state.progress}\r\n            onChange={this.handleInputChange} />\r\n        </div>\r\n        \r\n        <div className=\"input-group\">\r\n        <label>Start date:</label>\r\n          <input\r\n            className=\"input-value\"\r\n            name=\"start\"\r\n            type=\"text\"\r\n            value={this.state.start}\r\n            onChange={this.handleInputChange} />\r\n        </div>\r\n        \r\n        <div className=\"input-group\">\r\n        <label>End date:</label>\r\n          <input\r\n            className=\"input-value\"\r\n            name=\"end\"\r\n            type=\"text\"\r\n            value={this.state.end}\r\n            onChange={this.handleInputChange} />\r\n        </div>\r\n\r\n        <div className=\"input-group\">\r\n        <label>Dependency:</label>\r\n          <select name=\"dependency\"\r\n            className=\"input-value\"\r\n            type=\"text\"\r\n            value={this.state.dependencies}\r\n            onChange={this.handleInputChange}>\r\n            {this.props.dataProvider.getSimpleTaskList().map(task=>{return <option value={task.id} key={task.id}>{task.name}</option>})}\r\n          </select>\r\n        </div>\r\n\r\n        <input className=\"add-task-button\" type=\"submit\" value = \"Add task\"/>\r\n      </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TaskForm;","import Popup from 'reactjs-popup';\r\nimport './modal.css';\r\n\r\nimport React, { Component } from 'react'\r\nimport TaskForm from '../TaskForm.js'\r\n\r\nexport default class EditPopup extends Component {\r\n    state: any;\r\n    props: any;\r\n    render() {\r\n        return (\r\n            <Popup\r\n            trigger={<button className=\"button add-task\"> Add Task </button>}\r\n            modal={true}\r\n            nested={true}>\r\n            {(close:any) => (\r\n              <div className=\"modal\">\r\n                <button className=\"close\" onClick={close}>\r\n                  &times;\r\n                </button>\r\n                <div className=\"header\"> Add Task </div>\r\n                <div className=\"content\">\r\n                <TaskForm \r\n                addTaskCallback={this.props.addTaskCallback} \r\n                dataProvider={this.props.dataProvider}\r\n                close={close}>\r\n                </TaskForm>\r\n                </div>\r\n              </div>\r\n            )}\r\n            </Popup>\r\n        )\r\n    }\r\n}","export default class DataProvider {\r\n    users: { userId: number; fullName: string; }[];\r\n    tasks: { \r\n        id: number; State: \"ToDo\"|\"Done\"|\"InProgress\"|\"Review\", \r\n        Assignee: number; \r\n        TaskName: string; \r\n        StartDate: Date; \r\n        EndDate: Date; \r\n        Duration: number; \r\n        ParentId: number|undefined;\r\n        Progress: number; \r\n        Predecessor?: string|undefined;\r\n    }[];\r\n    refreshCallback: any;\r\n    mindMap: any;\r\n\r\n    constructor(refreshCallback:any) {\r\n        this.refreshCallback = refreshCallback;\r\n        this.tasks = [\r\n        {\r\n            id: 0,\r\n            State: \"ToDo\", \r\n            TaskName: 'Project',\r\n            StartDate: new Date('04/02/2019'),\r\n            EndDate: new Date('04/21/2019'),\r\n            ParentId: undefined,\r\n            Assignee: 0,\r\n            Duration: 0,\r\n            Progress: 50\r\n        },\r\n        {\r\n            id: 1,\r\n            State: \"ToDo\", \r\n            TaskName: 'Project Initiation',\r\n            StartDate: new Date('04/02/2019'),\r\n            EndDate: new Date('04/04/2019'),\r\n            ParentId: 0,\r\n            Assignee: 0,\r\n            Duration: 0,\r\n            Progress: 50\r\n        },\r\n        { \r\n            id: 2, \r\n            State: \"Done\", \r\n            TaskName: 'Identify Site location', \r\n            StartDate: new Date('04/02/2019'),\r\n            EndDate: new Date('04/06/2019'),\r\n            ParentId: 1,\r\n            Assignee: 0,\r\n            Duration: 0,\r\n            Progress: 50\r\n        },\r\n        { \r\n            id: 3, \r\n            State: \"Done\", \r\n            TaskName: 'Perform Soil test', \r\n            StartDate: new Date('04/02/2019'), \r\n            EndDate: new Date('04/08/2019'),\r\n            ParentId: 1,\r\n            Assignee: 0,\r\n            Duration: 0,\r\n            Progress: 50\r\n        },\r\n        { \r\n            id: 4, \r\n            State: \"ToDo\", \r\n            TaskName: 'Soil test approval', \r\n            StartDate: new Date('04/02/2019'), \r\n            EndDate: new Date('04/10/2019'),\r\n            ParentId: 1,\r\n            Assignee: 0,\r\n            Duration: 0,\r\n            Progress: 50\r\n        },\r\n        {\r\n            id: 5,\r\n            State: \"ToDo\", \r\n            TaskName: 'Project Estimation',\r\n            StartDate: new Date('04/02/2019'),\r\n            EndDate: new Date('04/12/2019'),\r\n            ParentId: 0,\r\n            Assignee: 0,\r\n            Duration: 0,\r\n            Progress: 50\r\n        },\r\n        {   id: 6, \r\n            State: \"ToDo\", \r\n            TaskName: 'Develop floor plan for estimation1', \r\n            StartDate: new Date('04/04/2019'), \r\n            EndDate: new Date('04/10/2019'),\r\n            ParentId: 5,\r\n            Assignee: 0,\r\n            Duration: 0,\r\n            Progress: 50\r\n        },\r\n        { \r\n            id: 7, \r\n            State: \"ToDo\", \r\n            TaskName: 'List materials1', \r\n            StartDate: new Date('04/04/2019'), \r\n            EndDate: new Date('05/01/2019'),\r\n            ParentId: 5,\r\n            Assignee: 0,\r\n            Duration: 0,\r\n            Progress: 50\r\n        },\r\n        { \r\n            id: 8, \r\n            State: \"ToDo\", \r\n            TaskName: 'Estimation approval1', \r\n            StartDate: new Date('04/06/2019'), \r\n            EndDate: new Date('05/01/2019'),\r\n            ParentId: 5,\r\n            Assignee: 0,\r\n            Duration: 0,\r\n            Progress: 50\r\n        },\r\n        { \r\n            id: 9, \r\n            State: \"ToDo\", \r\n            TaskName: 'Develop floor plan for estimation2', \r\n            StartDate: new Date('04/06/2019'), \r\n            EndDate: new Date('05/01/2019'),\r\n            ParentId: 8,\r\n            Assignee: 0,\r\n            Duration: 0,\r\n            Progress: 50, \r\n            Predecessor: '8FS' \r\n        },\r\n        { \r\n            id: 10, \r\n            State: \"ToDo\", \r\n            TaskName: 'List materials2', \r\n            StartDate: new Date('04/06/2019'), \r\n            EndDate: new Date('05/01/2019'),\r\n            ParentId: 8,\r\n            Assignee: 0,\r\n            Duration: 0,\r\n            Progress: 50,\r\n            Predecessor: '9FS' \r\n        },\r\n        { \r\n            id: 11, \r\n            State: \"ToDo\", \r\n            TaskName: 'Estimation approval2', \r\n            StartDate: new Date('04/06/2019'), \r\n            EndDate: new Date('05/01/2019'),\r\n            ParentId: 8,\r\n            Assignee: 0,\r\n            Duration: 0,\r\n            Progress: 50, \r\n            Predecessor: '10FS'\r\n        },\r\n        { \r\n            id: 12, \r\n            State: \"ToDo\", \r\n            TaskName: 'Develop floor plan for estimation3', \r\n            StartDate: new Date('04/06/2019'), \r\n            EndDate: new Date('05/01/2019'),\r\n            ParentId: 11,\r\n            Assignee: 0,\r\n            Duration: 0,\r\n            Progress: 50, \r\n            Predecessor: '11FS' \r\n        },\r\n        { \r\n            id: 13, \r\n            State: \"ToDo\", \r\n            TaskName: 'List materials3', \r\n            StartDate: new Date('04/06/2019'), \r\n            EndDate: new Date('05/01/2019'),\r\n            ParentId: 11,\r\n            Assignee: 0,\r\n            Duration: 0,\r\n            Progress: 50,\r\n            Predecessor: '12FS' \r\n        },\r\n        { \r\n            id: 14, \r\n            State: \"ToDo\", \r\n            TaskName: 'Estimation approval3', \r\n            StartDate: new Date('04/08/2019'),\r\n            EndDate: new Date('05/01/2019'), \r\n            ParentId: 11,\r\n            Assignee: 0,\r\n            Duration: 0,\r\n            Progress: 50,\r\n            Predecessor: '13FS'\r\n        },\r\n        { \r\n            id: 15, \r\n            State: \"ToDo\", \r\n            TaskName: 'Develop floor plan for estimation4', \r\n            StartDate: new Date('04/06/2019'),\r\n            EndDate: new Date('05/01/2019'),\r\n            ParentId: 14,\r\n            Assignee: 0,\r\n            Duration: 0,\r\n            Progress: 50, \r\n            Predecessor: '11FS' \r\n        },\r\n        { \r\n            id: 16, \r\n            State: \"ToDo\", \r\n            TaskName: 'List materials4', \r\n            StartDate: new Date('04/06/2019'),\r\n            EndDate: new Date('05/01/2019'), \r\n            ParentId: 14,\r\n            Assignee: 0,\r\n            Duration: 0,\r\n            Progress: 50,\r\n            Predecessor: '12FS' \r\n        },\r\n        { \r\n            id: 17, \r\n            State: \"ToDo\", \r\n            TaskName: 'Estimation approval4', \r\n            StartDate: new Date('04/08/2019'),\r\n            EndDate: new Date('05/01/2019'), \r\n            ParentId: 14,\r\n            Assignee: 0,\r\n            Duration: 0,\r\n            Progress: 50,\r\n            Predecessor: '13FS'\r\n        }];\r\n\r\n        this.tasks.map(t=>{\r\n            // The number of milliseconds in one day\r\n            const ONE_DAY = 1000 * 60 * 60 * 24;\r\n            // Calculate the difference in milliseconds\r\n            const differenceMs = Math.abs(t.EndDate.getTime() - t.StartDate.getTime());\r\n            // Convert back to days and return\r\n            t.Duration = Math.round(differenceMs / ONE_DAY);\r\n        })\r\n\r\n        this.users = [\r\n            {userId: 0, fullName:\"Unassigned\"},\r\n            {userId: 1, fullName:\"Eddard Stark\"},\r\n            {userId: 2, fullName:\"Robert Baratheon\"},\r\n            {userId: 3, fullName:\"Jaime Lannister\"},\r\n            {userId: 4, fullName:\"Catelyn Stark\"},\r\n            {userId: 5, fullName:\"Cersei Lannister\"},\r\n            {userId: 6, fullName:\"Daenerys Targaryen\"},\r\n            {userId: 7, fullName:\"Jorah Mormont\"},\r\n            {userId: 8, fullName:\"Viserys Targaryen\"},\r\n            {userId: 9, fullName:\"Jon Snow\"},\r\n            {userId: 10, fullName:\"Robb Stark\"},\r\n            {userId: 11, fullName:\"Sansa Stark\"},\r\n            {userId: 12, fullName:\"Arya Stark\"},\r\n            {userId: 13, fullName:\"Theon Greyjoy\"},\r\n            {userId: 14, fullName:\"Brandon Stark\"},\r\n            {userId: 15, fullName:\"Joffrey Baratheon\"},\r\n            {userId: 16, fullName:\"Sandor Clegane\"},\r\n            {userId: 17, fullName:\"Tyrion Lannister\"}];    \r\n    }\r\n\r\n    addTask(task: any){\r\n        this.tasks.push(task);\r\n    }\r\n\r\n    getTaskWithId(id: number){\r\n        return this.tasks.find((x:any)=>{return x.id === id});\r\n    }\r\n\r\n    getTaskIdList(){\r\n        return this.tasks.map((t:any)=>{return t.id});\r\n    }\r\n}\r\n","import './App.css';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\n\nimport MindMapContainer from './MindMap/MindMap'\nimport TableView from './MindMap/TableView.jsx'\n\nimport GanttDiagram from './Gantt/GanttDiagram';\nimport KanbanBoard from './Kanban/KanbanBoard';\nimport EditPopup from './Popup/EditPopup.tsx'\nimport DataProvider from './DataProvider.tsx'\n\nimport { SplitterComponent, PanesDirective, PaneDirective } from '@syncfusion/ej2-react-layouts';\n\nvar React = require('react');\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.dataProvider = new DataProvider(this.refresh.bind(this));\n        this.state = {\n            tasks: this.dataProvider.tasks,\n            users: this.dataProvider.users,\n        };\n    }\n\n    refresh(dataProviderTasks) {\n        // this.setState({tasks:dataProviderTasks})\n    }\n\n    addTask = (taskData) => {\n        this.dataProvider.addTask(taskData);\n        this.setState({tasks: this.dataProvider.getTasks(), mindMap: this.dataProvider.getMindMap()});\n    }\n\n    mindMapActionComplete = (event) => {\n        if(event.name === \"textEdit\") {\n            let task = event.element.data;\n            task.TaskName = event.newValue;   \n        }\n        this.setState({mindMap:this.dataProvider.tasks})\n    }\n\n    tableActionComplete = (event) => {\n        if(event.name === \"actionComplete\") {\n            let task = this.dataProvider.tasks.find(task=>task.id === event.data.id);\n            task.StartDate = event.data.StartDate;\n            task.EndDate = event.data.EndDate;\n            task.Duration = event.data.Duration;\n            task.Progress = event.data.Progress;\n            task.Assignee = event.data.Assignee;\n            task.TaskName = event.data.TaskName;   \n            task.State = event.data.State;   \n        }\n        this.setState({tasks:this.dataProvider.tasks})\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n            <Tabs>\n            <TabList>\n            <EditPopup addTaskCallback={this.addTask}\n                dataProvider={this.dataProvider}></EditPopup>\n            <Tab>Mind Map</Tab>\n            <Tab>Gantt Diagram</Tab>\n            <Tab>Kanban Board</Tab>\n            </TabList>\n\n            <TabPanel>\n                <div className=\"mindmap-container\">\n                    <SplitterComponent height=\"100%\" width=\"100%\" separatorSize={2}>\n                        <PanesDirective>\n                            <PaneDirective size=\"25%\" min=\"0px\" content={()=>{return(<TableView tasks={this.state.tasks} actionComplete={this.tableActionComplete.bind(this)}></TableView>)}}/>\n                            <PaneDirective size=\"75%\" min=\"60px\" content={()=>{return(<MindMapContainer tasks={this.state.tasks} actionComplete={this.mindMapActionComplete.bind(this)}/>)}}/>\n                        </PanesDirective>\n                    </SplitterComponent>\n                </div>\n            </TabPanel>\n\n            <TabPanel>\n                <div className=\"gantt-container\">\n                    <GanttDiagram tasks={this.state.tasks} users={this.state.users}></GanttDiagram>\n                </div>\n            </TabPanel>\n\n            <TabPanel>\n                <div className=\"gantt-container\">\n                    <KanbanBoard tasks={this.state.tasks}></KanbanBoard>\n                </div>\n            </TabPanel>\n\n            </Tabs>\n            \n            </div>);\n        }\n    }\n    \n    export default App;\n    ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n   <React.StrictMode>\n    <App />\n   </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}