{"version":3,"sources":["TaskForm.js","App.js","index.js"],"names":["TaskForm","props","addTask","event","addTaskCallback","state","setState","id","name","description","assignee","progress","start","end","preventDefault","handleInputChange","bind","target","value","type","checked","this","onSubmit","className","onChange","require","Component","App","taskData","tasks","push","viewMode","dependencies","getTasks","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.34f29ba9.chunk.js","sourcesContent":["var React = require('react');\r\n\r\nclass TaskForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        id: \"Task6\",\r\n        name: \"Task6\",\r\n        description: \"Test\",\r\n        assignee: \"User\",\r\n        progress: \"80\",\r\n        start: \"2020-11-23\",\r\n        end: \"2021-11-23\"\r\n    };\r\n\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n  }\r\n\r\n  handleInputChange(event) {\r\n    const target = event.target;\r\n    const value = target.type === 'checkbox' ? target.checked : target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  addTask = (event) => {\r\n    this.props.addTaskCallback(this.state);\r\n    // generate new id\r\n    this.setState({\r\n        id: \"\",\r\n        name: \"\",\r\n        description: \"\",\r\n        assignee: \"\",\r\n        progress: \"\",\r\n        start: \"\",\r\n        end: \"\"\r\n    })\r\n    \r\n    event.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit = {this.addTask}>\r\n        <div className=\"container\">\r\n      <label>Create new task</label>\r\n\r\n        <div className=\"input-group\">\r\n        <label>Title:</label>\r\n        <input\r\n          name=\"name\"\r\n          type=\"input\"\r\n          value={this.state.name}\r\n          onChange={this.handleInputChange} />\r\n          </div>\r\n\r\n        <div className=\"input-group\">\r\n        <label>Description:</label>\r\n          <input\r\n            name=\"description\"\r\n            type=\"text\"\r\n            value={this.state.description}\r\n            onChange={this.handleInputChange} />\r\n        </div>\r\n\r\n        <div className=\"input-group\">\r\n        <label>Assignee:</label>\r\n          <input\r\n            name=\"assignee\"\r\n            type=\"text\"\r\n            value={this.state.assignee}\r\n            onChange={this.handleInputChange} />\r\n        </div>\r\n\r\n        <div className=\"input-group\">\r\n        <label>Progress:</label>\r\n          <input\r\n            name=\"progress\"\r\n            type=\"text\"\r\n            value={this.state.progress}\r\n            onChange={this.handleInputChange} />\r\n        </div>\r\n        \r\n        <div className=\"input-group\">\r\n        <label>Start date:</label>\r\n          <input\r\n            name=\"start\"\r\n            type=\"text\"\r\n            value={this.state.start}\r\n            onChange={this.handleInputChange} />\r\n        </div>\r\n        \r\n        <div className=\"input-group\">\r\n        <label>End date:</label>\r\n          <input\r\n            name=\"end\"\r\n            type=\"text\"\r\n            value={this.state.end}\r\n            onChange={this.handleInputChange} />\r\n        </div>\r\n        <input className=\"add-task-button\" type=\"submit\" value = \"Add task\"/>\r\n        </div>\r\n      </form>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default TaskForm;","import './App.css';\nimport TaskForm from './TaskForm.js'\nimport ReactGantt from 'gantt-for-react';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\n\nvar React = require('react');\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            viewMode: \"Month\",\n            tasks: [ \n                { id:\"Task1\", name:\"Test1\", start:\"2020-11-20\", end:\"2021-02-24\", progress:\"80\", dependencies:\"\" },\n                { id:\"Task2\", name:\"Test2\", start:\"2020-11-21\", end:\"2021-04-24\", progress:\"10\", dependencies:\"\" },\n                { id:\"Task3\", name:\"Test3\", start:\"2020-11-23\", end:\"2021-04-26\", progress:\"30\", dependencies:\"Task1,Task2\" },\n                { id:\"Task4\", name:\"Test4\", start:\"2020-11-23\", end:\"2021-06-26\", progress:\"10\", dependencies:\"Task3\" },\n            ]\n        }\n    }\n    \n    addTask = (taskData) => {\n        this.state.tasks.push(taskData);\n        this.setState(this.state);\n    }\n    \n    getTasks(){\n        return this.state.tasks;\n    }\n    \n    render() {\n        return (\n            <div className=\"App\">\n            <Tabs>\n            <TabList>\n            <Tab>Edit Tasks</Tab>\n            <Tab>Kanban Board</Tab>\n            <Tab>Mind Map</Tab>\n            <Tab>Gantt Diagram</Tab>\n            </TabList>\n            \n            <TabPanel>\n            <TaskForm addTaskCallback={this.addTask}></TaskForm>            \n            </TabPanel>\n\n            <TabPanel>\n            </TabPanel>\n\n            <TabPanel>\n            </TabPanel>\n\n            <TabPanel>\n                <div>\n                    <ReactGantt tasks={this.getTasks()} viewMode={this.state.viewMode}></ReactGantt>\n                </div>\n            </TabPanel>\n\n            </Tabs>\n            \n            </div>);\n        }\n    }\n    \n    export default App;\n    ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}